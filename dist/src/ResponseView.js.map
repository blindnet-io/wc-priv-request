{"version":3,"file":"ResponseView.js","sourceRoot":"","sources":["../../src/ResponseView.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,GAAG,EAAE,MAAM,uBAAuB,CAAC;AAE5C,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAC;AAErD,mGAAmG;AACnG,yDAAyD;AAEzD;;GAEG;AAEH,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,UAAU;IAA5C;;QACkC,aAAQ,GAAoB;YAC1D,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,IAAI,EAAE,EAAE;YACR,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,EAAE;SACX,CAAC;IAkEJ,CAAC;IAtCC,oBAAoB,CAAC,QAAyB;QAC5C,gEAAgE;QAChE,IAAI,QAAQ,CAAC,kBAAkB,CAAC,EAAE;YAChC,OAAO,IAAI,CAAA;;mBAEE,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;YACjD,QAAQ,CAAC,OAAO;;OAErB,CAAC;SACH;QACD,OAAO,IAAI,CAAA,wCAAwC,CAAC;IACtD,CAAC;IAED,MAAM;QACJ,iDAAiD;QACjD,MAAM,QAAQ,GACZ,IAAI,CAAC,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjD,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ;YACxB,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAEtB,OAAO,IAAI,CAAA;;;UAGL,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;YAClB,IAAI,CAAC,CAAC,kBAAkB,CAAC,EAAE;gBACzB,IACE,CAAC,CAAC,kBAAkB,CAAC,CAAC,iBAAiB,EAAE,CAAC,QAAQ,CAAC,cAAc,CAAC,EAClE;oBACA,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;iBACrC;gBACD,OAAO,IAAI,CAAA;cACT,CAAC,CAAC,kBAAkB,CAAC,EAAE,CAAC;aAC3B;YACD,OAAO,IAAI,CAAA,8BAA8B,CAAC;QAC5C,CAAC,CAAC;;KAEL,CAAC;IACJ,CAAC;CACF,CAAA;AAhEQ,mBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;GAwBlB,CAAC;AAhC8B;IAA/B,QAAQ,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC;8CAM7B;AAPS,YAAY;IADxB,aAAa,CAAC,eAAe,CAAC;GAClB,YAAY,CAyExB;SAzEY,YAAY","sourcesContent":["import { html, css, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { map } from 'lit/directives/map.js';\nimport { PrivacyResponse } from './models/privacy-response.js';\nimport { descriptions } from './utils/dictionary.js';\n\n// Question - are there types of responses other than transparency that give an immediate response?\n// just wondering how generic this component needs to be.\n\n/**\n * View the response to a privacy request.\n */\n@customElement('response-view')\nexport class ResponseView extends LitElement {\n  @property({ attribute: false }) response: PrivacyResponse = {\n    responseId: '',\n    inResponseTo: '',\n    date: '',\n    system: '',\n    status: '',\n  };\n\n  static styles = css`\n    :host {\n      border: 2px solid #000;\n      border-radius: 20px;\n      padding: 35px 75px;\n    }\n\n    :host h1 {\n      padding: 0px;\n      margin: 0px;\n      font-size: 24px;\n      text-align: center;\n    }\n\n    #responses-ctr {\n      display: grid;\n      row-gap: 40px;\n      padding: 50px 0px 0px 0px;\n    }\n\n    .transparency-rsp-ctr {\n      display: grid;\n      row-gap: 10px;\n    }\n  `;\n\n  transparencyTemplate(response: PrivacyResponse) {\n    // TODO: Change this to handle response.message or response.data\n    if (response['requested-action']) {\n      return html`\n        <div class=\"transparency-rsp-ctr\">\n          <li><b>${descriptions[response['requested-action']]}</b></li>\n          ${response.message}\n        </div>\n      `;\n    }\n    return html`Error: No requested-action in response`;\n  }\n\n  render() {\n    // Extract array of one or more privacy responses\n    const response: PrivacyResponse[] =\n      this.response.includes && this.response.includes[0]\n        ? this.response.includes\n        : [this.response];\n\n    return html`\n      <h1>Requested Information</h1>\n      <div id=\"responses-ctr\">\n        ${map(response, r => {\n          if (r['requested-action']) {\n            if (\n              r['requested-action'].toLocaleLowerCase().includes('transparency')\n            ) {\n              return this.transparencyTemplate(r);\n            }\n            return html`Error: No HTML template defined for action type\n            ${r['requested-action']}`;\n          }\n          return html`Error: No action in response`;\n        })}\n      </div>\n    `;\n  }\n}\n"]}