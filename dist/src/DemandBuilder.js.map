{"version":3,"file":"DemandBuilder.js","sourceRoot":"","sources":["../../src/DemandBuilder.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport { html, css, LitElement, PropertyValueMap } from 'lit';\nimport { customElement, property, state } from 'lit/decorators.js';\nimport { choose } from 'lit/directives/choose.js';\n\nimport { ACTION } from './models/priv-terms.js';\nimport { enabledActions } from './utils/conf.js';\nimport { Demand } from './models/demand.js';\nimport { descriptions } from './utils/dictionary.js';\nimport { DemandState } from './utils/states.js';\nimport './DemandBuilderActionMenu.js';\nimport './DemandBuilderDropdownElement.js';\nimport './DemandBuilderTextElement.js';\nimport './demand-forms/TransparencyForm.js';\nimport './DemandBuilderSidebarItem.js';\nimport { when } from 'lit/directives/when.js';\n\n/**\n * Handles creation and review of a single demand. Uses one of the ActionForm\n * components to display different options for each action type.\n */\n@customElement('demand-builder')\nexport class DemandBuilder extends LitElement {\n  @property({ type: Array }) includedActions: ACTION[] = [];\n\n  @property({ type: Number, attribute: 'demand-state' })\n  demandState: DemandState = DemandState.SELECT_ACTION;\n\n  @property({ attribute: false }) demands = new Map<string, Demand>();\n\n  @state() _selectedAction = ACTION.TRANSPARENCY;\n\n  @state() _sidebarSelectedIndex = 0;\n\n  constructor() {\n    super();\n\n    // Demand update listeners\n    this.addEventListener('demand-set', e => {\n      const { demandId, demand } = (e as CustomEvent).detail;\n      this.demands.set(demandId, demand);\n    });\n    this.addEventListener('demand-delete', e => {\n      const { id } = (e as CustomEvent).detail;\n      this.demands.delete(id);\n    });\n    this.addEventListener('demand-set-multiple', e => {\n      ((e as CustomEvent).detail.demands as Map<string, Demand>).forEach(\n        (demand, id) => this.demands.set(id, demand)\n      );\n    });\n\n    // UI element listeners\n    this.addEventListener('demand-action-menu-click', () => {\n      this._selectedAction = ACTION.TRANSPARENCY;\n      this.demandState = DemandState.EDIT;\n    });\n    this.addEventListener('sidebar-click', e => {\n      this._sidebarSelectedIndex = this.includedActions.indexOf(\n        (e as CustomEvent).detail.id\n      );\n    });\n  }\n\n  static styles = css`\n    :host {\n      display: grid;\n      grid-row: 2/3;\n      grid-column: 1/2;\n      grid-template-columns: repeat(4, 1fr);\n    }\n\n    .demand-builder-back-btn {\n      grid-column-start: 1/2;\n    }\n\n    #sidebar {\n      display: grid;\n      height: fit-content;\n    }\n\n    p {\n      padding: 0px;\n      margin: 0px;\n    }\n  `;\n\n  /**\n   * Get a HTML template for the demand builder sidebar, with each PRIV action\n   * included in this DemandBuilder as an option.\n   * @returns HTML template for sidebar display\n   */\n  getSidebarTemplate() {\n    return html`\n      <div id=\"sidebar\">\n        <p id=\"sidebar-title\">Type of demand:</p>\n        ${this.includedActions.map(\n          (a, i) => html`\n            <demand-builder-sidebar-item\n              id=${a}\n              title=${a}\n              description=${descriptions[a]}\n              ?disabled=${!enabledActions.get(a)}\n              ?checked=${i === this._sidebarSelectedIndex}\n            ></demand-builder-sidebar-item>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  /**\n   * Get an HTML template for the form corresponding to the selected action type.\n   * @returns HTML template for action form\n   */\n  getSelectedFormTemplate() {\n    return html`\n      ${choose(this._selectedAction, [\n        [\n          ACTION.TRANSPARENCY,\n          () => html`<transparency-form\n            demand-state=${this.demandState}\n            .demandBuilderId=${this.id}\n            .transparencyActions=${Object.values(ACTION).filter(a =>\n              a.includes('TRANSPARENCY.')\n            )}\n            .demands=${this.demands}\n          ></transparency-form>`,\n        ],\n      ])}\n    `;\n  }\n\n  /**\n   * Hook into update to fire an event letting the top level component know the user\n   * has navigated past the action menu screen.\n   * @param changedProperties Map of changed values to their previous value\n   */\n  update(changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>) {\n    super.update(changedProperties);\n\n    if (\n      changedProperties.has('demandState') &&\n      changedProperties.get('demandState') === DemandState.SELECT_ACTION\n    ) {\n      this.dispatchEvent(\n        new Event('menu-done', { bubbles: true, composed: true })\n      );\n    }\n  }\n\n  /**\n   * Hook into firstUpdated to include an initial calculation of the sidebar index\n   * @param _changedProperties\n   */\n  protected firstUpdated(\n    _changedProperties: PropertyValueMap<any> | Map<PropertyKey, unknown>\n  ): void {\n    super.firstUpdated(_changedProperties);\n    this._sidebarSelectedIndex = this.includedActions.indexOf(\n      this._selectedAction\n    );\n  }\n\n  render() {\n    if (this.demandState === DemandState.SELECT_ACTION) {\n      return html`<demand-builder-action-menu\n        .includedActions=${this.includedActions}\n      ></demand-builder-action-menu>`;\n    } else {\n      return html`\n        <!-- Include sidebar in edit mode -->\n        ${when(this.demandState === DemandState.EDIT, () =>\n          this.getSidebarTemplate()\n        )}\n        <!-- Display selected form -->\n        ${this.getSelectedFormTemplate()}\n      `;\n    }\n  }\n}\n"]}