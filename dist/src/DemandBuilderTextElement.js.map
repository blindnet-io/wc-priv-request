{"version":3,"file":"DemandBuilderTextElement.js","sourceRoot":"","sources":["../../src/DemandBuilderTextElement.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D;;GAEG;AAEH,IAAa,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,UAAU;IAAxD;;QAC8B,WAAM,GAAG,+BAA+B,CAAC;QAEzB,SAAI,GAAG,KAAK,CAAC;IAsE3D,CAAC;IA7BC,WAAW,CAAC,CAAQ;QAClB,MAAM,KAAK,GAAG,IAAI,WAAW,CAAC,qBAAqB,EAAE;YACnD,OAAO,EAAE,IAAI;YACb,QAAQ,EAAE,IAAI;YACd,MAAM,EAAE;gBACN,IAAI,EAAG,CAAC,CAAC,MAA8B,CAAC,KAAK;aAC9C;SACF,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC5B,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;+BACgB,IAAI,CAAC,MAAM;;;iBAGzB,GAAG,EAAE;YACZ,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;QACzB,CAAC;;;;;;;iBAOQ,IAAI,CAAC,WAAW;;KAE5B,CAAC;IACJ,CAAC;CACF,CAAA;AApEQ,+BAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAqClB,CAAC;AAzC0B;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wDAA0C;AAEzB;IAA3C,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;sDAAc;AAH9C,wBAAwB;IADpC,aAAa,CAAC,6BAA6B,CAAC;GAChC,wBAAwB,CAyEpC;SAzEY,wBAAwB","sourcesContent":["import { html, css, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\n\n/**\n * Collapsable element displaying a prompt and text input field.\n */\n@customElement('demand-builder-text-element')\nexport class DemandBuilderTextElement extends LitElement {\n  @property({ type: String }) prompt = 'Additional Message (optional)';\n\n  @property({ type: Boolean, reflect: true }) open = false;\n\n  static styles = css`\n    :host {\n      display: grid;\n      grid-template-columns: 7fr 1fr;\n      border: 2px solid #000;\n      border-radius: 10px;\n      padding: 20px 40px 20px 40px;\n    }\n\n    :host([open]) #text-input {\n      display: grid;\n    }\n\n    #element-prompt {\n      display: flex;\n      align-items: center;\n    }\n\n    #text-element-write-button {\n      height: 30px;\n      background: url('/src/assets/icons/edit_fill.svg');\n      height: 24px;\n      width: 24px;\n      border: none;\n      justify-self: right;\n    }\n\n    #text-input {\n      display: none;\n      overflow: hidden;\n      grid-column: 1/3;\n      margin: 25px 0px 0px 0px;\n    }\n\n    p {\n      margin: 0px;\n    }\n  `;\n\n  handleInput(e: Event) {\n    const event = new CustomEvent('text-element-change', {\n      bubbles: true,\n      composed: true,\n      detail: {\n        text: (e.target as HTMLTextAreaElement).value,\n      },\n    });\n    this.dispatchEvent(event);\n  }\n\n  render() {\n    return html`\n      <p id=\"element-prompt\">${this.prompt}</p>\n      <button\n        id=\"text-element-write-button\"\n        @click=${() => {\n          this.open = !this.open;\n        }}\n      ></button>\n      <textarea\n        id=\"text-input\"\n        name=\"paragraph_text\"\n        cols=\"50\"\n        rows=\"5\"\n        @input=${this.handleInput}\n      ></textarea>\n    `;\n  }\n}\n"]}