{"version":3,"file":"TransparencyForm.js","sourceRoot":"","sources":["../../../src/demand-forms/TransparencyForm.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, css, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { choose } from 'lit/directives/choose.js';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport '../DemandBuilderDropdownElement.js';\nimport '../DemandBuilderTextElement.js';\nimport { ACTION } from '../models/priv-terms.js';\nimport { Demand } from '../models/demand.js';\nimport { descriptions } from '../utils/dictionary.js';\nimport { DemandState } from '../utils/states.js';\nimport { enabledActions } from '../utils/conf.js';\n\n/**\n * ActionForm for the Transparency PRIV action. Includes a dropdown and text element.\n *\n * The transparency form follows a different pattern than the other actions, as each\n * TRANSPARENCY.* actually represents a completely separate demand, but we display them\n * all in one DemandBuilder element.\n */\n@customElement('transparency-form')\nexport class TransparencyForm extends LitElement {\n  @property({ type: Number, attribute: 'demand-state' })\n  demandState: DemandState = DemandState.EDIT;\n\n  @property({ type: Array, attribute: false })\n  transparencyActions: ACTION[] = [];\n\n  @property({ attribute: false }) demands = new Map<string, Demand>();\n\n  @property({ attribute: false }) demandBuilderId: string = '';\n\n  private _extraMessage = undefined;\n\n  constructor() {\n    super();\n\n    this.addEventListener('dropdown-element-add', e => {\n      const details = (e as CustomEvent).detail;\n      const demandId = uuidv4();\n      const demand: Demand = {\n        action: details.id,\n        message: this._extraMessage,\n      };\n      this.demands.set(demandId, demand);\n\n      // Fire event to set a single demand\n      const setEvent = new CustomEvent('demand-set', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          demandId,\n          demand,\n        },\n      });\n      this.dispatchEvent(setEvent);\n\n      // Fire event indicating the demand builder is in a valid state once one choice is selected\n      if (details['first-selection']) {\n        const dmdValidEvent = new CustomEvent('demand-validated', {\n          bubbles: true,\n          composed: true,\n          detail: {\n            demandBuilderId: this.demandBuilderId,\n          },\n        });\n        this.dispatchEvent(dmdValidEvent);\n      }\n    });\n\n    this.addEventListener('dropdown-element-delete', e => {\n      const details = (e as CustomEvent).detail;\n      // Delete demands for the unchecked action\n      Array.from(this.demands)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        .filter(([_, d]) => d.action === details.id)\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        .forEach(([id, _]) => {\n          this.demands.delete(id);\n          // Fire event to delete a single demand\n          const event = new CustomEvent('demand-delete', {\n            bubbles: true,\n            composed: true,\n            detail: {\n              id,\n            },\n          });\n          this.dispatchEvent(event);\n        });\n\n      // Fire event indicating the demand builder for this form is in an invalid state\n      if (details['none-selected']) {\n        const event = new CustomEvent('demand-invalidated', {\n          bubbles: true,\n          composed: true,\n          detail: {\n            demandBuilderId: this.demandBuilderId,\n          },\n        });\n        this.dispatchEvent(event);\n      }\n    });\n\n    this.addEventListener('text-element-change', e => {\n      this._extraMessage = (e as CustomEvent).detail?.text;\n      // Update existing demands\n      this.demands.forEach(d => {\n        const demand = d;\n        demand.message = this._extraMessage;\n      });\n\n      // Fire event to set multiple demands\n      const event = new CustomEvent('demand-set-multiple', {\n        bubbles: true,\n        composed: true,\n        detail: {\n          demands: this.demands,\n        },\n      });\n      this.dispatchEvent(event);\n    });\n  }\n\n  static styles = css`\n    :host {\n      display: grid;\n      row-gap: 35px;\n      grid-column: 2/5;\n      align-content: flex-start;\n      border: 2px solid #000;\n      border-radius: 20px;\n      padding: 40px 60px 40px 60px;\n      margin: 0px;\n    }\n\n    :host([demand-state='2']) {\n      padding: 30px;\n      grid-column: 1/5;\n    }\n\n    #dmd-ctr {\n      display: grid;\n      row-gap: 20px;\n    }\n\n    #dmd-ctr ul {\n      margin: 0;\n    }\n\n    #dmd-ctr li:not(:last-child) {\n      margin-bottom: 15px;\n    }\n\n    #edit-heading-1 {\n      font-weight: bold;\n      grid-column: 1/2;\n      padding: 0px 0px 0px 10px;\n    }\n\n    #review-heading-1 {\n      font-weight: bold;\n      /* padding: 0px; */\n    }\n\n    #extra-msg-txt {\n      padding: 0px 0px 0px 20px;\n    }\n\n    p {\n      margin: 0px;\n    }\n  `;\n\n  /**\n   * Get the edit display for a transparency demand\n   * @returns HTML template for edit display\n   */\n  getEditTemplate() {\n    const selectedActions = Object.values(this.demands).map(d => d.action);\n    return html`\n      <p id=\"edit-heading-1\"><b>Details of my TRANSPARENCY Demand</b></p>\n      <demand-builder-dropdown-element\n        .choices=${this.transparencyActions.map(a => ({\n          id: a,\n          description: descriptions[a],\n          checked: selectedActions.includes(a),\n          disabled: !enabledActions.get(a) ?? true,\n        }))}\n      ></demand-builder-dropdown-element>\n      <demand-builder-text-element></demand-builder-text-element>\n    `;\n  }\n\n  /**\n   * Get the review display for a transparency demand\n   * @returns HTML template for review display\n   */\n  getReviewTemplate() {\n    return html`\n      <div id=\"dmd-ctr\">\n        <p id=\"review-hd-1\"><b>TRANSPARENCY demand</b></p>\n        <p>I want to know:</p>\n        <ul id=\"transparency-demand-review-list\">\n          ${Array.from(this.demands.values()).map(\n            (a: Demand) => html` <li>${descriptions[a.action]}</li> `\n          )}\n        </ul>\n        ${this._extraMessage\n          ? html`\n              <p>Plus additional info:</p>\n              <p id=\"extra-msg-txt\"><i>${this._extraMessage}</i></p>\n            `\n          : null}\n      </div>\n    `;\n  }\n\n  render() {\n    return html`\n      ${choose(this.demandState, [\n        [DemandState.EDIT, () => this.getEditTemplate()],\n        [DemandState.REVIEW, () => this.getReviewTemplate()],\n      ])}\n    `;\n  }\n}\n"]}