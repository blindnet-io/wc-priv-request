{"version":3,"file":"bldn-priv-request.test.js","sourceRoot":"","sources":["../../test/bldn-priv-request.test.ts"],"names":[],"mappings":"AAAA,8BAA8B;AAC9B,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAC1C,+DAA+D;AAC/D,OAAO,6BAA6B,CAAC;AACrC,OAAO,EAAE,MAAM,EAAE,MAAM,6BAA6B,CAAC;AAErD,OAAO,EAAE,kBAAkB,EAAE,MAAM,mCAAmC,CAAC;AAEvE,QAAQ,CAAC,gBAAgB,EAAE,GAAG,EAAE;IAC9B,EAAE,CAAC,oBAAoB,EAAE,KAAK,IAAI,EAAE;QAClC,MAAM,OAAO,GAAmB;YAC9B,OAAO,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC;SAC/C,CAAC;QAEF,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CACjD,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAC1C,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,oEAAoE;IACpE,8FAA8F;IAC9F,4CAA4C;IAC5C,oCAAoC;IACpC,MAAM;IACN,4DAA4D;IAC5D,8FAA8F;IAC9F,qDAAqD;IACrD,oCAAoC;IACpC,MAAM;IACN,2DAA2D;IAC3D,+CAA+C;IAC/C,4EAA4E;IAC5E,OAAO;IACP,kDAAkD;IAClD,MAAM;IACN,4CAA4C;IAC5C,+CAA+C;IAC/C,oDAAoD;IACpD,OAAO;IACP,mDAAmD;IACnD,MAAM;AACR,CAAC,CAAC,CAAC","sourcesContent":["// import { html } from 'lit';\nimport { expect } from '@open-wc/testing';\n// import { BldnPrivRequest } from '../src/BldnPrivRequest.js';\nimport '../src/bldn-priv-request.js';\nimport { ACTION } from '../src/models/priv-terms.js';\nimport { PrivacyRequest } from '../src/models/privacy-request.js';\nimport { sendPrivacyRequest } from '../src/utils/PrivacyRequestApi.js';\n\ndescribe('Mock API Tests', () => {\n  it('test single demand', async () => {\n    const request: PrivacyRequest = {\n      demands: [{ action: ACTION.TRANSPARENCY_DPO }],\n    };\n\n    sendPrivacyRequest(request).then(privacyResponse =>\n      expect(privacyResponse.data).to.equal({})\n    );\n  });\n});\n\ndescribe('BldnPrivRequest', () => {\n  // it('has a default title \"Hey there\" and counter 5', async () => {\n  //   const el = await fixture<BldnPrivRequest>(html`<bldn-priv-request></bldn-priv-request>`);\n  //   expect(el.title).to.equal('Hey there');\n  //   expect(el.counter).to.equal(5);\n  // });\n  // it('increases the counter on button click', async () => {\n  //   const el = await fixture<BldnPrivRequest>(html`<bldn-priv-request></bldn-priv-request>`);\n  //   el.shadowRoot!.querySelector('button')!.click();\n  //   expect(el.counter).to.equal(6);\n  // });\n  // it('can override the title via attribute', async () => {\n  //   const el = await fixture<BldnPrivRequest>(\n  //     html`<bldn-priv-request title=\"attribute title\"></bldn-priv-request>`\n  //   );\n  //   expect(el.title).to.equal('attribute title');\n  // });\n  // it('passes the a11y audit', async () => {\n  //   const el = await fixture<BldnPrivRequest>(\n  //     html`<bldn-priv-request></bldn-priv-request>`\n  //   );\n  //   await expect(el).shadowDom.to.be.accessible();\n  // });\n});\n"]}